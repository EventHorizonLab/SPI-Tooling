name: Verify SemVer Version
on:
  workflow_call:

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR Branch
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Get PR version
        id: pr_version
        run: |
          PR_VERSION=$(grep '^baseVersion=' gradle.properties | cut -d'=' -f2)
          echo "PR_VERSION=$PR_VERSION" >> $GITHUB_OUTPUT
      - name: Verify in SemVer format
        run: |
          if ! [[ "${{ steps.pr_version.outputs.PR_VERSION }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$ ]]; then
              echo "Error: Version '${{ steps.pr_version.outputs.PR_VERSION }}' is not in valid SemVer format."
              exit 1
          fi
      - name: Get main version
        id: main_version
        run: |
          git fetch origin main
          MAIN_VERSION=$(git show origin/main:gradle.properties | grep '^baseVersion=' | cut -d'=' -f2)
          echo "MAIN_VERSION=$MAIN_VERSION" >> $GITHUB_OUTPUT
      - name: Compare versions
        run: |
          echo "Main branch version: ${{ steps.main_version.outputs.MAIN_VERSION }}"
          echo "PR branch version: ${{ steps.pr_version.outputs.PR_VERSION }}"
          if [[ "${{ steps.main_version.outputs.MAIN_VERSION }}" == "${{ steps.pr_version.outputs.PR_VERSION }}" ]]; then
              echo "Error: Version '${{ steps.pr_version.outputs.PR_VERSION }}' is the same as the main branch version '${{ steps.main_version.outputs.MAIN_VERSION }}'."
              exit 1
          fi
          
          version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }
          
          if ! version_gt "${{ steps.pr_version.outputs.pr_version }}" "${{ steps.main_version.outputs.main_version }}"; then
            echo "❌ Version in PR is not greater than main. Please bump the version."
            exit 1
          fi
          
          echo "✅ Version bump check passed."
