plugins {
    id 'base'
}

allprojects {
    group = findProperty('group')
    def baseVer = findProperty('baseVersion') as String
    if (!baseVer.endsWith('-SNAPSHOT')) {
        baseVer += '-SNAPSHOT'
    }
    version = baseVer
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    def projName = project.name

    publishing {
        publications {
            create('maven', MavenPublication) {
                from components.java
                artifactId = "${rootProject.name}-${projName}"
                groupId = rootProject.group as String
                version = rootProject.version as String
            }
        }
    }

    tasks.withType(PublishToMavenLocal).configureEach { t ->
        doLast {
            def pub = t.publication
            if (pub instanceof MavenPublication) {
                def coords = "${pub.groupId}:${pub.artifactId}:${pub.version}"
                println ""
                println "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                println "📦 Published to Maven Local"
                println "   Coordinates : $coords"
                println "   Repository  : mavenLocal (~/.m2/repository)"
                println "   Artifacts   :"
                pub.artifacts.each { art ->
                    println "      • ${art.file.name}  →  ${art.file}"
                }
                println "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
                println ""
            } else {
                println "⚠️  Task ${t.path} did not publish a MavenPublication"
            }
        }
    }
}

tasks.register('copyJar', Copy) {
    description = 'Collects all subproject jars into the root build/ directory'
    group = 'build'
    dependsOn subprojects.collect { it.tasks.matching { it.name == 'jar' } }
    from subprojects.collect { proj -> proj.tasks.named('jar').flatMap { it.archiveFile } }
    into layout.buildDirectory.dir('libs')
}
