plugins {
    id 'base'
    id 'org.jetbrains.kotlin.jvm' version '2.2.0'
    id 'org.jetbrains.kotlin.kapt' version '2.2.0'
    id "com.vanniktech.maven.publish" version "0.34.0"
}

allprojects {
    group = findProperty('group') as String
    version = findProperty('baseVersion') as String
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.kapt'
    apply plugin: 'com.vanniktech.maven.publish'

    // Configure Vanniktech plugin
    mavenPublishing {
        // Central Portal publishing
        publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)

        // Sign all publications with inâ€‘memory keys
        signAllPublications()

        // Optional: override artifactId per module
        coordinates(
                groupId = rootProject.group as String,
                artifactId = "${rootProject.name}-${project.name}",
                version = rootProject.version as String
        )

        pom {
            name.set("${rootProject.name}-${project.name}")
            description.set("A module of the ${rootProject.name} project.")
            url.set("https://github.com/EventHorizonLab/SPI-Tooling")
            licenses {
                license {
                    name.set("MIT License")
                    url.set("https://opensource.org/license/mit")
                }
            }
            developers {
                developer {
                    id.set("eventhorizonlab")
                    name.set("EventHorizonLab")
                    url.set("https://github.com/EventHorizonLab")
                }
            }
            scm {
                url.set("https://github.com/EventHorizonLab/spi-tooling")
                connection.set("scm:git:https://github.com/EventHorizonLab/spi-tooling.git")
                developerConnection.set("scm:git:ssh://git@github.com:EventHorizonLab/spi-tooling.git")
            }
        }
    }

    // Add GitHub Packages as an extra target
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/EventHorizonLab/SPI-Tooling")
                credentials {
                    username = findProperty('gprUser') ?: System.getenv('GITHUB_ACTOR')
                    password = findProperty('gprToken') ?: System.getenv('GITHUB_TOKEN')
                }
            }
        }
    }
}

tasks.register('copyJar', Copy) {
    description = 'Collects all subproject jars into the root build/ directory'
    group = 'build'
    dependsOn subprojects.collect { it.tasks.matching { it.name == 'jar' } }
    from subprojects.collect { proj -> proj.tasks.named('jar').flatMap { it.archiveFile } }
    into layout.buildDirectory.dir('libs')
}
