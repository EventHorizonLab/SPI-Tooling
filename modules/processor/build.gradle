plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.2.0'
    id 'org.jetbrains.kotlin.kapt' version '2.2.0'
    id 'io.kotest' version '6.0.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
    withSourcesJar()
    withJavadocJar()
}


kotlin {
    jvmToolchain(24)
}

configurations {
    shade
    implementation.extendsFrom(shade)
    testImplementation.extendsFrom annotationProcessor
}

dependencies {
    implementation project(':annotations')
    compileOnly 'com.google.auto.service:auto-service-annotations:1.1.1'
    kapt 'com.google.auto.service:auto-service:1.1.1'

    testRuntimeOnly project(':annotations')
    testImplementation 'io.kotest:kotest-framework-engine:6.0.1'
    testImplementation 'io.kotest:kotest-assertions-core:6.0.1'
    testImplementation "dev.zacsweers.kctfork:core:0.8.0"
}

var args = [
        "--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED",
]

tasks.withType(Test).configureEach {
    jvmArgs(args)
}

tasks.named('jvmKotest') {
    jvmArgs(args)
}

